name: CI

on: [push, pull_request]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
      - id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/${{ github.repository }}/ci
      - id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.action == 'push' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            ghcr.io/${{ github.repository }}/ci:master
            ${{ steps.docker_meta.outputs.tags }}
          cache-to: type=inline
    outputs:
      image: ghcr.io/${{ github.repository }}/ci@${{ steps.docker_build.digest }}

  eslint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'
    - run: npm install eslint
    - run: npx eslint .

  glib-compile-schemas:
    runs-on: ubuntu-latest
    needs: build-docker-image
    container:
      image: ${{ needs.build-docker-image.outputs.image }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CONTAINER_REGISTRY_PAT }}

    steps:
    - uses: actions/checkout@v2
    - run: make schemas/gschemas.compiled

  gtk-builder-validate:
    runs-on: ubuntu-latest
    needs: build-docker-image
    container:
      image: ${{ needs.build-docker-image.outputs.image }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CONTAINER_REGISTRY_PAT }}

    steps:
    - uses: actions/checkout@v2
    - run: make gtk-builder-validate

  pack:
    if: ${{ github.action == 'push' }}

    runs-on: ubuntu-latest
    needs: build-docker-image
    container:
      image: ${{ needs.build-docker-image.outputs.image }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CONTAINER_REGISTRY_PAT }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: src
    - uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: pages

    - run: make pack
      working-directory: src

    - run: mkdir -pv downloads/${{ github.ref }}
      working-directory: pages
    - run: cp -v src/*.shell-extension.zip pages/downloads/${{ github.ref }}/
    - run: cp -rv src/README.md src/docs pages/
      if: ${{ github.ref == 'refs/heads/master' }}
    - run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      working-directory: pages
    - run: git add -v downloads/${{ github.ref }}/
      working-directory: pages
    - run: git add -v README.md docs
      working-directory: pages
      if: ${{ github.ref == 'refs/heads/master' }}
    - run: |
        git commit -m "Auto-build ${{ github.ref }} on $(date)

        Source commit ${{ github.sha }}
        "
      working-directory: pages
    - run: git push
      working-directory: pages
